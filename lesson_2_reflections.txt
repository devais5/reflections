Q1 - What happens when you initialize a repository? Why do you need it?
A1 - When I initialize a repository the folder will contain a file named ".git" which contains all the metadata related to the history of the repository. I need it to keep track of the files and the eventual
     modification and commit made to them in the repository.

Q2 - How is the staging area different from the working directory and the repository? What value do you think it offers?
A2 - The staging area is placed between the working folder and the repository. It contains files that are ready to be commited. It gives us the possiblity to check the files we are going to commit and to be
     certain about what we are going to commit, we might need to change again the files before commiting them or maybe we are going to commit a wrong file.

Q3 - How can you use the staging area to make sure you have one commit per logical change?
A3 - I can check that I'm going to commit per logical change by checkings before with the command git diff to see the difference bewteen the working folder and the staging area, then I can double check with 
     the command git diff --staged where I can see the difference beetween the staging area and the most recent commit. In this way I will be sure to have put in the staging area something that has a logical
     sense in terms of changing.
     
Q4 - What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A4 - It can helps me when I want to add a new feature so I can see when it was implemented and merged to the master branch. Branches helps me separate all the differnt new feature implemented.

Q5 - How do diagrams help you visualize the branch structure?
A5 - The diagrams help me visualize the master branch with its commits, the other branches with names and their realtive commits and finally the detached commit with no branch name that can be added to the 
     whole project with the command "git branch -b 'new_branch_name'".
     